#pragma GCC optimize("O3")
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define pb push_back
#define sz size()
#define mk make_pair
#define ff first
#define ss second
#define pll pair<ll, ll>
#define pii pair<int, int>
#define ull unsigned long long
#define all(x) x.begin(), x.end()
#define Resh cin>>tt;while(tt--)solve();
#define fast ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
const long double PI = acos(-1);
const long long n6 = 1e6 + 10;
const long long n5 = 1e5+1;
const long long inf = 1e9+5;
const long long mod = 16714589;
ll tt;
ll n, q, tp, a[n5], t[4 * n5];
void build(ll u, ll tl, ll tr){
    if(tl==tr) {
        t[u] = a[tl];
        return;
    }
    ll tm = (tl+tr)/2;
    build(u+u, tl, tm);
    build(u+u+1, tm+1, tr);
    t[u] = __gcd(t[u+u], t[u+u+1]);
}
void upd(ll u, ll tl, ll tr, ll pos, ll x) {
    if(tl == tr) {
        t[u] = x;
        return;
    }
    ll tm = (tl+tr)>>1;
    if(pos <= tm) upd(u*2, tl, tm, pos, x);
    else upd(u+u+1, tm+1, tr, pos, x);
    t[u] = __gcd(t[u+u],t[u+u+1]);
}
ll get(ll u, ll tl, ll tr, ll l, ll r) {
    if(r < tl || tr < l) return 0;
    if(l <= tl && tr <= r) return t[u];
    ll tm = (tl+tr)>>1;
    ll s1 = get(u+u, tl, tm, l, r);
    ll s2 = get(u+u+1, tm+1, tr, l, r);
    return __gcd(s1,s2);
}

main () {
    fast;
    ll m;
    cin >> n >> m;
    for(int i = 1;i <= n;i++) {
        cin >> a[i];
    }
    build(1,1,n);
    for(int i = 1;i <= m;i++) {
        ll l, r;
        cin >> l >> r;
        cout << get(1,1,n,l,r) <<'\n';
    }
}

